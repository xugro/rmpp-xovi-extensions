name: Build with RMPP Toolchain and Upload Releases

on:
    push:
        tags:
          - '*'

jobs:
    release:
        runs-on: ubuntu-latest
        outputs:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
        steps:
            - name: Create Release
              uses: actions/create-release@v1
              id: create_release
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                draft: true
                prerelease: false
                release_name: ${{ github.event.release.tag_name }}
                tag_name: ${{ github.ref }}

    build_aarch64:
        runs-on: ubuntu-latest
        needs: release
        container:
            image: eeems/remarkable-toolchain:latest-rmpp

        steps:
            - name: Checkout Code
              uses: actions/checkout@v3
              with:
                submodules: true

            - name: Build Application
              run: |
                curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > install
                sh install -y
                . "$HOME/.cargo/env"
                rustup target add aarch64-unknown-linux-gnu
                apt-get update
                apt-get install -y zip
                export XOVI_REPO=/tmp/xovi
                git clone https://github.com/asivery/xovi $XOVI_REPO
                . /opt/codex/ferrari/*/environment-setup-cortexa53-crypto-remarkable-linux
                make
                mkdir output
                find .. -iname "*.so" -not -path "**/release/deps/**" -exec cp -v {} output \;
                cd output
                zip ../extensions.zip *

            - name: Upload Release Asset
              uses: actions/upload-release-asset@v1
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                upload_url: ${{ needs.release.outputs.upload_url }}
                asset_path: extensions.zip
                asset_name: extensions-rmpp.zip
                asset_content_type: application/octet-stream

    build_armv7:
        runs-on: ubuntu-latest
        needs: release
        container:
            image: eeems/remarkable-toolchain:latest-rm2

        steps:
            - name: Checkout Code
              uses: actions/checkout@v3
              with:
                submodules: true

            - name: Build Application
              run: |
                curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > install
                sh install -y
                . "$HOME/.cargo/env"
                rustup target add armv7-unknown-linux-gnueabihf
                apt-get update
                apt-get install -y zip
                export XOVI_REPO=/tmp/xovi
                git clone https://github.com/asivery/xovi $XOVI_REPO
                . /opt/codex/rm2/*/environment-setup-cortexa7hf-neon-remarkable-linux-gnueabi
                make qt-command-executor && make qt-resource-rebuilder
                mkdir output
                find .. -iname "*.so" -not -path "**/release/deps/**" -exec cp -v {} output \;
                cd output
                zip ../extensions.zip *

            - name: Upload Release Asset
              uses: actions/upload-release-asset@v1
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                upload_url: ${{ needs.release.outputs.upload_url }}
                asset_path: extensions.zip
                asset_name: extensions-beta-rm2.zip
                asset_content_type: application/octet-stream
    publish:
        runs-on: ubuntu-latest
        needs: [release, build_aarch64, build_armv7]
        steps:
            - name: Publish Draft Release
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                GH_REPO: ${{ github.repository }}
              run: gh release edit $(basename "${{ github.ref }}") --draft=false --verify-tag
